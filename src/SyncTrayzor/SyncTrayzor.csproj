<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <AppConfigVariant Condition="'$(AppConfigVariant)' == ''">Portable</AppConfigVariant>
        <AppConfigSource>App.$(AppConfigVariant).config</AppConfigSource>
    </PropertyGroup>
    <ItemGroup>
        <None Include="$(AppConfigSource)">
            <Link>$(AssemblyName).dll.config</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <PropertyGroup>
        <TargetFramework>net8.0-windows10.0.17763.0</TargetFramework>
        <EnableWindowsTargeting>true</EnableWindowsTargeting>
        <OutputType>WinExe</OutputType>
        <PublishUrl>publish\</PublishUrl>
        <ProcessRunnerEnabled>true</ProcessRunnerEnabled>
        <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
        <UseWPF>true</UseWPF>
        <ApplicationHighDpiMode>PerMonitorV2</ApplicationHighDpiMode>
        <ImportWindowsDesktopTargets>true</ImportWindowsDesktopTargets>
        <SelfContained Condition="'$(SelfContained)' == ''">false</SelfContained>
        <Optimize>true</Optimize>
        <!-- Hack to a) use the current processor architecture b) forcing a windows runtime, such that build on Linux works -->
        <RuntimeIdentifier>win-$([System.String]::Copy('$(NETCoreSdkRuntimeIdentifier)').Split('-')[1])</RuntimeIdentifier>
        <RuntimeIdentifiers>win-x64;win-arm64</RuntimeIdentifiers>
        <AssemblyName>SyncTrayzor</AssemblyName>
        <Copyright>Copyright © Antony Male 2015</Copyright>
        <ApplicationIcon>Icons\default.ico</ApplicationIcon>
        <ApplicationManifest>app.manifest</ApplicationManifest>
    </PropertyGroup>
    <ItemGroup>
        <EmbeddedResource Include="..\..\security\synctrayzor_releases_cert.asc">
            <Link>Resources\synctrayzor_releases_cert.asc</Link>
        </EmbeddedResource>
        <AppDesigner Include="Properties\" />
    </ItemGroup>
    <ItemGroup>
        <Resource Include="FodyWeavers.xml" />
        <Resource Include="Icons\stopped.ico" />
        <Resource Include="Icons\default_tray.ico" />
        <Resource Include="Icons\syncing_2.ico" />
        <Resource Include="Icons\syncing_3.ico" />
        <Resource Include="Icons\syncing_4.ico" />
    </ItemGroup>
    <ItemGroup>
        <Resource Include="Icons\default.ico" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\Syncthing.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\Stylet.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\CefSharp.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\CEF.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\NLog.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\RestEase.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\NotifyIcon.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\Json.NET.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\Fody.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\FluentValidation.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\SmartFormat.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\BouncyCastle.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\Mono.Options.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\ListViewLayoutManager.txt" />
    </ItemGroup>
    <ItemGroup>
        <Resource Include="Icons\alert_tray.ico" />
    </ItemGroup>
    <ItemGroup>
        <Resource Include="Icons\paused_tray.ico" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\WindowsAPICodePack.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\Rx.txt" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Resources\Licenses\OxyPlot.txt" />
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="BouncyCastle.Cryptography">
            <Version>2.6.2</Version>
        </PackageReference>
        <PackageReference Include="CefSharp.Wpf.NETCore">
            <Version>140.1.140</Version>
        </PackageReference>
        <PackageReference Include="FluentValidation">
            <Version>12.0.0</Version>
        </PackageReference>
        <PackageReference Include="Fody">
            <Version>6.9.3</Version>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Hardcodet.NotifyIcon.Wpf">
            <Version>2.0.1</Version>
        </PackageReference>
        <PackageReference Include="Microsoft-WindowsAPICodePack-Core">
            <Version>1.1.5</Version>
        </PackageReference>
        <PackageReference Include="Microsoft-WindowsAPICodePack-Shell">
            <Version>1.1.5</Version>
        </PackageReference>
        <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
        <PackageReference Include="Microsoft.Xaml.Behaviors.Wpf">
            <Version>1.1.135</Version>
        </PackageReference>
        <PackageReference Include="Mono.Options">
            <Version>6.12.0.148</Version>
        </PackageReference>
        <PackageReference Include="NLog">
            <Version>6.0.4</Version>
        </PackageReference>
        <PackageReference Include="OxyPlot.Wpf">
            <Version>2.2.0</Version>
        </PackageReference>
        <PackageReference Include="PropertyChanged.Fody">
            <Version>4.1.0</Version>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="RestEase">
            <Version>1.6.4</Version>
        </PackageReference>
        <PackageReference Include="RestEase.SourceGenerator">
            <Version>1.6.4</Version>
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="SmartFormat">
            <Version>3.6.1</Version>
        </PackageReference>
        <PackageReference Include="Stylet">
            <Version>1.3.7</Version>
        </PackageReference>
        <PackageReference Include="System.Management" Version="9.0.9" />
        <PackageReference Include="System.Reactive">
            <Version>6.0.2</Version>
        </PackageReference>
        <PackageReference Include="System.Configuration.ConfigurationManager" Version="9.0.9" />
        <PackageReference Include="WpfScreenHelper" Version="2.1.1" />
    </ItemGroup>
    <ItemGroup>
        <Compile Remove="Utils\SynchronizedEventSubscriber.cs" />
    </ItemGroup>
    <ItemGroup>
        <None Remove="NLog.config" />
        <Content Include="NLog.config">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    <PropertyGroup>
        <ProcessRunnerProject>..\ProcessRunner\ProcessRunner.csproj</ProcessRunnerProject>
        <ProcessRunnerOutputDir>$(IntermediateOutputPath)\ProcessRunner</ProcessRunnerOutputDir>
        <ProcessRunnerExe>$(ProcessRunnerOutputDir)\ProcessRunner.exe</ProcessRunnerExe>
    </PropertyGroup>
    <Target Name="PublishProcessRunner" BeforeTargets="Build;Publish">
        <!-- Publish only if output doesn't exist or is stale -->
        <Exec Command="dotnet publish &quot;$(ProcessRunnerProject)&quot; -c $(Configuration) /p:PublishSingleFile=true /p:SelfContained=true /p:DebugType=None /p:DebugSymbols=false -o &quot;$(ProcessRunnerOutputDir)&quot;"
              Condition="!Exists('$(ProcessRunnerExe)') OR '@(Compile->'%(ModifiedTime)')' != '@(LastBuildState->'%(ModifiedTime)')'" />
    </Target>
    <Target Name="CopyProcessRunnerBuild" AfterTargets="Build">
        <!-- Copy to main app output -->
        <Copy SourceFiles="$(ProcessRunnerExe)" DestinationFolder="$(OutputPath)" />
    </Target>
    <Target Name="CopyProcessRunnerPublish" AfterTargets="Publish">
        <!-- Copy to main app output -->
        <Copy SourceFiles="$(ProcessRunnerExe)" DestinationFolder="$(PublishDir)" />
    </Target>
</Project>